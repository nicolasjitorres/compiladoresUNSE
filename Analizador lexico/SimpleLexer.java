// Generated from SimpleLexer.g4 by ANTLR 4.13.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class SimpleLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		CADENA=1, NUMERO=2, LPAREN=3, RPAREN=4, COLON=5, SEMICOLON=6, OPPRIMERNIVEL=7, 
		OPSEGUNDONIVEL=8, OPTERCERNIVEL=9, OPERADORCOMPARACION=10, OPERADORLOGICO=11, 
		BOOLEANO=12, COMENTARIO=13, TIPODATO=14, TIPODATONUM=15, PALCLAVE=16, 
		ID=17, WS=18;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"CADENA", "NUMERO", "LPAREN", "RPAREN", "COLON", "SEMICOLON", "OPPRIMERNIVEL", 
			"OPSEGUNDONIVEL", "OPTERCERNIVEL", "OPERADORCOMPARACION", "OPERADORLOGICO", 
			"BOOLEANO", "COMENTARIO", "TIPODATO", "TIPODATONUM", "PALCLAVE", "ID", 
			"WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, "'('", "')'", "':'", "';'", "'^'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "CADENA", "NUMERO", "LPAREN", "RPAREN", "COLON", "SEMICOLON", "OPPRIMERNIVEL", 
			"OPSEGUNDONIVEL", "OPTERCERNIVEL", "OPERADORCOMPARACION", "OPERADORLOGICO", 
			"BOOLEANO", "COMENTARIO", "TIPODATO", "TIPODATONUM", "PALCLAVE", "ID", 
			"WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public SimpleLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "SimpleLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0012\u00d9\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0001\u0000\u0001\u0000\u0005\u0000(\b\u0000\n\u0000\f\u0000+\t\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0003\u00010\b\u0001\u0001\u0001"+
		"\u0001\u0001\u0005\u00014\b\u0001\n\u0001\f\u00017\t\u0001\u0001\u0001"+
		"\u0003\u0001:\b\u0001\u0001\u0001\u0001\u0001\u0004\u0001>\b\u0001\u000b"+
		"\u0001\f\u0001?\u0003\u0001B\b\u0001\u0001\u0002\u0001\u0002\u0001\u0003"+
		"\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006"+
		"\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0003\u0007"+
		"R\b\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0003\t_\b\t\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0003\nf\b\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0003\u000b"+
		"q\b\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0005\fw\b\f\n\f\f\fz\t\f\u0001"+
		"\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001"+
		"\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0003"+
		"\r\u008e\b\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e"+
		"\u0001\u000e\u0001\u000e\u0001\u000e\u0003\u000e\u0098\b\u000e\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0003\u000f\u00cd\b\u000f\u0001\u0010\u0001\u0010"+
		"\u0005\u0010\u00d1\b\u0010\n\u0010\f\u0010\u00d4\t\u0010\u0001\u0011\u0001"+
		"\u0011\u0001\u0011\u0001\u0011\u0001x\u0000\u0012\u0001\u0001\u0003\u0002"+
		"\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013"+
		"\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0012\u0001\u0000\n\u0004\u0000\n\n\r\r\"\"^^\u0002\u0000++--\u0001"+
		"\u000019\u0001\u000009\u0001\u000000\u0001\u0000,,\u0002\u0000<<>>\u0002"+
		"\u0000AZaz\u0003\u000009AZaz\u0003\u0000\t\n\r\r  \u00f2\u0000\u0001\u0001"+
		"\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001"+
		"\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000"+
		"\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000"+
		"\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000"+
		"\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000"+
		"\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000"+
		"\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000"+
		"\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000"+
		"\u0000#\u0001\u0000\u0000\u0000\u0001%\u0001\u0000\u0000\u0000\u0003/"+
		"\u0001\u0000\u0000\u0000\u0005C\u0001\u0000\u0000\u0000\u0007E\u0001\u0000"+
		"\u0000\u0000\tG\u0001\u0000\u0000\u0000\u000bI\u0001\u0000\u0000\u0000"+
		"\rK\u0001\u0000\u0000\u0000\u000fQ\u0001\u0000\u0000\u0000\u0011S\u0001"+
		"\u0000\u0000\u0000\u0013^\u0001\u0000\u0000\u0000\u0015e\u0001\u0000\u0000"+
		"\u0000\u0017p\u0001\u0000\u0000\u0000\u0019r\u0001\u0000\u0000\u0000\u001b"+
		"\u008d\u0001\u0000\u0000\u0000\u001d\u0097\u0001\u0000\u0000\u0000\u001f"+
		"\u00cc\u0001\u0000\u0000\u0000!\u00ce\u0001\u0000\u0000\u0000#\u00d5\u0001"+
		"\u0000\u0000\u0000%)\u0005\"\u0000\u0000&(\u0007\u0000\u0000\u0000\'&"+
		"\u0001\u0000\u0000\u0000(+\u0001\u0000\u0000\u0000)\'\u0001\u0000\u0000"+
		"\u0000)*\u0001\u0000\u0000\u0000*,\u0001\u0000\u0000\u0000+)\u0001\u0000"+
		"\u0000\u0000,-\u0005\"\u0000\u0000-\u0002\u0001\u0000\u0000\u0000.0\u0007"+
		"\u0001\u0000\u0000/.\u0001\u0000\u0000\u0000/0\u0001\u0000\u0000\u0000"+
		"09\u0001\u0000\u0000\u000015\u0007\u0002\u0000\u000024\u0007\u0003\u0000"+
		"\u000032\u0001\u0000\u0000\u000047\u0001\u0000\u0000\u000053\u0001\u0000"+
		"\u0000\u000056\u0001\u0000\u0000\u00006:\u0001\u0000\u0000\u000075\u0001"+
		"\u0000\u0000\u00008:\u0007\u0004\u0000\u000091\u0001\u0000\u0000\u0000"+
		"98\u0001\u0000\u0000\u0000:A\u0001\u0000\u0000\u0000;=\u0007\u0005\u0000"+
		"\u0000<>\u0007\u0003\u0000\u0000=<\u0001\u0000\u0000\u0000>?\u0001\u0000"+
		"\u0000\u0000?=\u0001\u0000\u0000\u0000?@\u0001\u0000\u0000\u0000@B\u0001"+
		"\u0000\u0000\u0000A;\u0001\u0000\u0000\u0000AB\u0001\u0000\u0000\u0000"+
		"B\u0004\u0001\u0000\u0000\u0000CD\u0005(\u0000\u0000D\u0006\u0001\u0000"+
		"\u0000\u0000EF\u0005)\u0000\u0000F\b\u0001\u0000\u0000\u0000GH\u0005:"+
		"\u0000\u0000H\n\u0001\u0000\u0000\u0000IJ\u0005;\u0000\u0000J\f\u0001"+
		"\u0000\u0000\u0000KL\u0005^\u0000\u0000L\u000e\u0001\u0000\u0000\u0000"+
		"MR\u0005%\u0000\u0000NO\u0005\u00c3\u0000\u0000OR\u0005\u2014\u0000\u0000"+
		"PR\u0005/\u0000\u0000QM\u0001\u0000\u0000\u0000QN\u0001\u0000\u0000\u0000"+
		"QP\u0001\u0000\u0000\u0000R\u0010\u0001\u0000\u0000\u0000ST\u0007\u0001"+
		"\u0000\u0000T\u0012\u0001\u0000\u0000\u0000UV\u0005=\u0000\u0000V_\u0005"+
		"=\u0000\u0000WX\u0005!\u0000\u0000X_\u0005=\u0000\u0000Y_\u0007\u0006"+
		"\u0000\u0000Z[\u0005>\u0000\u0000[_\u0005=\u0000\u0000\\]\u0005<\u0000"+
		"\u0000]_\u0005=\u0000\u0000^U\u0001\u0000\u0000\u0000^W\u0001\u0000\u0000"+
		"\u0000^Y\u0001\u0000\u0000\u0000^Z\u0001\u0000\u0000\u0000^\\\u0001\u0000"+
		"\u0000\u0000_\u0014\u0001\u0000\u0000\u0000`a\u0005A\u0000\u0000ab\u0005"+
		"N\u0000\u0000bf\u0005D\u0000\u0000cd\u0005O\u0000\u0000df\u0005R\u0000"+
		"\u0000e`\u0001\u0000\u0000\u0000ec\u0001\u0000\u0000\u0000f\u0016\u0001"+
		"\u0000\u0000\u0000gh\u0005T\u0000\u0000hi\u0005R\u0000\u0000ij\u0005U"+
		"\u0000\u0000jq\u0005E\u0000\u0000kl\u0005F\u0000\u0000lm\u0005A\u0000"+
		"\u0000mn\u0005L\u0000\u0000no\u0005S\u0000\u0000oq\u0005E\u0000\u0000"+
		"pg\u0001\u0000\u0000\u0000pk\u0001\u0000\u0000\u0000q\u0018\u0001\u0000"+
		"\u0000\u0000rs\u0005/\u0000\u0000st\u0005*\u0000\u0000tx\u0001\u0000\u0000"+
		"\u0000uw\t\u0000\u0000\u0000vu\u0001\u0000\u0000\u0000wz\u0001\u0000\u0000"+
		"\u0000xy\u0001\u0000\u0000\u0000xv\u0001\u0000\u0000\u0000y{\u0001\u0000"+
		"\u0000\u0000zx\u0001\u0000\u0000\u0000{|\u0005*\u0000\u0000|}\u0005/\u0000"+
		"\u0000}~\u0001\u0000\u0000\u0000~\u007f\u0006\f\u0000\u0000\u007f\u001a"+
		"\u0001\u0000\u0000\u0000\u0080\u0081\u0005B\u0000\u0000\u0081\u0082\u0005"+
		"O\u0000\u0000\u0082\u0083\u0005O\u0000\u0000\u0083\u0084\u0005L\u0000"+
		"\u0000\u0084\u0085\u0005E\u0000\u0000\u0085\u0086\u0005A\u0000\u0000\u0086"+
		"\u008e\u0005N\u0000\u0000\u0087\u0088\u0005S\u0000\u0000\u0088\u0089\u0005"+
		"T\u0000\u0000\u0089\u008a\u0005R\u0000\u0000\u008a\u008b\u0005I\u0000"+
		"\u0000\u008b\u008c\u0005N\u0000\u0000\u008c\u008e\u0005G\u0000\u0000\u008d"+
		"\u0080\u0001\u0000\u0000\u0000\u008d\u0087\u0001\u0000\u0000\u0000\u008e"+
		"\u001c\u0001\u0000\u0000\u0000\u008f\u0090\u0005I\u0000\u0000\u0090\u0091"+
		"\u0005N\u0000\u0000\u0091\u0098\u0005T\u0000\u0000\u0092\u0093\u0005F"+
		"\u0000\u0000\u0093\u0094\u0005L\u0000\u0000\u0094\u0095\u0005O\u0000\u0000"+
		"\u0095\u0096\u0005A\u0000\u0000\u0096\u0098\u0005T\u0000\u0000\u0097\u008f"+
		"\u0001\u0000\u0000\u0000\u0097\u0092\u0001\u0000\u0000\u0000\u0098\u001e"+
		"\u0001\u0000\u0000\u0000\u0099\u009a\u0005R\u0000\u0000\u009a\u009b\u0005"+
		"E\u0000\u0000\u009b\u009c\u0005T\u0000\u0000\u009c\u009d\u0005U\u0000"+
		"\u0000\u009d\u009e\u0005R\u0000\u0000\u009e\u00cd\u0005N\u0000\u0000\u009f"+
		"\u00a0\u0005M\u0000\u0000\u00a0\u00a1\u0005O\u0000\u0000\u00a1\u00a2\u0005"+
		"D\u0000\u0000\u00a2\u00a3\u0005U\u0000\u0000\u00a3\u00a4\u0005L\u0000"+
		"\u0000\u00a4\u00cd\u0005E\u0000\u0000\u00a5\u00a6\u0005N\u0000\u0000\u00a6"+
		"\u00a7\u0005U\u0000\u0000\u00a7\u00a8\u0005L\u0000\u0000\u00a8\u00cd\u0005"+
		"L\u0000\u0000\u00a9\u00aa\u0005I\u0000\u0000\u00aa\u00cd\u0005F\u0000"+
		"\u0000\u00ab\u00ac\u0005E\u0000\u0000\u00ac\u00ad\u0005L\u0000\u0000\u00ad"+
		"\u00ae\u0005S\u0000\u0000\u00ae\u00cd\u0005E\u0000\u0000\u00af\u00b0\u0005"+
		"E\u0000\u0000\u00b0\u00b1\u0005N\u0000\u0000\u00b1\u00b2\u0005D\u0000"+
		"\u0000\u00b2\u00b3\u0005I\u0000\u0000\u00b3\u00cd\u0005F\u0000\u0000\u00b4"+
		"\u00b5\u0005W\u0000\u0000\u00b5\u00b6\u0005H\u0000\u0000\u00b6\u00b7\u0005"+
		"I\u0000\u0000\u00b7\u00b8\u0005L\u0000\u0000\u00b8\u00cd\u0005E\u0000"+
		"\u0000\u00b9\u00ba\u0005E\u0000\u0000\u00ba\u00bb\u0005N\u0000\u0000\u00bb"+
		"\u00bc\u0005D\u0000\u0000\u00bc\u00bd\u0005W\u0000\u0000\u00bd\u00be\u0005"+
		"H\u0000\u0000\u00be\u00bf\u0005I\u0000\u0000\u00bf\u00c0\u0005L\u0000"+
		"\u0000\u00c0\u00cd\u0005E\u0000\u0000\u00c1\u00c2\u0005C\u0000\u0000\u00c2"+
		"\u00c3\u0005A\u0000\u0000\u00c3\u00c4\u0005L\u0000\u0000\u00c4\u00c5\u0005"+
		"L\u0000\u0000\u00c5\u00c6\u0005 \u0000\u0000\u00c6\u00c7\u0005M\u0000"+
		"\u0000\u00c7\u00c8\u0005O\u0000\u0000\u00c8\u00c9\u0005D\u0000\u0000\u00c9"+
		"\u00ca\u0005U\u0000\u0000\u00ca\u00cb\u0005L\u0000\u0000\u00cb\u00cd\u0005"+
		"E\u0000\u0000\u00cc\u0099\u0001\u0000\u0000\u0000\u00cc\u009f\u0001\u0000"+
		"\u0000\u0000\u00cc\u00a5\u0001\u0000\u0000\u0000\u00cc\u00a9\u0001\u0000"+
		"\u0000\u0000\u00cc\u00ab\u0001\u0000\u0000\u0000\u00cc\u00af\u0001\u0000"+
		"\u0000\u0000\u00cc\u00b4\u0001\u0000\u0000\u0000\u00cc\u00b9\u0001\u0000"+
		"\u0000\u0000\u00cc\u00c1\u0001\u0000\u0000\u0000\u00cd \u0001\u0000\u0000"+
		"\u0000\u00ce\u00d2\u0007\u0007\u0000\u0000\u00cf\u00d1\u0007\b\u0000\u0000"+
		"\u00d0\u00cf\u0001\u0000\u0000\u0000\u00d1\u00d4\u0001\u0000\u0000\u0000"+
		"\u00d2\u00d0\u0001\u0000\u0000\u0000\u00d2\u00d3\u0001\u0000\u0000\u0000"+
		"\u00d3\"\u0001\u0000\u0000\u0000\u00d4\u00d2\u0001\u0000\u0000\u0000\u00d5"+
		"\u00d6\u0007\t\u0000\u0000\u00d6\u00d7\u0001\u0000\u0000\u0000\u00d7\u00d8"+
		"\u0006\u0011\u0000\u0000\u00d8$\u0001\u0000\u0000\u0000\u0010\u0000)/"+
		"59?AQ^epx\u008d\u0097\u00cc\u00d2\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}